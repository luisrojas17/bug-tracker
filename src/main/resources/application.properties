spring.application.name=${SPRING_APP_NAME:bug-tracker-application}
server.port=${SPRING_SERVER_PORT:18080}

logging.patter.console = ${LOG_PATTERN_CONSOLE: %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n}

logging.level.web=${SPRING_WEB_LOG_LEVEL:TRACE}
logging.level.org.springframework.web.client=${SPRING_WEB_CLIENT_LOG_LEVEL:TRACE}
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}

# Keycloak Oauth2 Configuration
# For this property spring.security.oauth2.client.registration.keycloak-oidc.provider you can set different
# providers like keycloak, apple, google, github, gitlab etc. Each provider corresponds to each client registered
spring.security.oauth2.client.registration.keycloak-oidc.provider=${KEYCLOAK_PROVIDER:keycloak}
spring.security.oauth2.client.registration.keycloak-oidc.client-name=${KEYCLOAK_CLIENT_NAME:bug-tracker-application}
spring.security.oauth2.client.registration.keycloak-oidc.client-id=${KEYCLOAK_CLIENT_ID:bug-tracker-application}
spring.security.oauth2.client.registration.keycloak-oidc.client-secret=${KEYCLOAK_CLIENT_SECRET:wGsWgcz2wmoUaVBO1JRp3yogfpSsiIfC}

# Use client authentication method = none if you configured PKCE in Keycloak
# which mean this is an optional configuration for public clients in OAuth 2.0,
# However, in the OAuth 2.1 version was made PKCE mandatory not only for public clients
# but also for secret ones.
#spring.security.oauth2.client.registration.keycloak-oidc.client-authentication-method=${KEYCLOAK_CLIENT_AUTHENTICATION_METHOD:none}

spring.security.oauth2.client.registration.keycloak-oidc.authorization-grant-type=${KEYCLOAK_AUTHORIZATION_GRANT_TYPE:authorization_code}

# We made default the scopes bugtracker.admin and bugtracker.user. That's why you can remove the scopes
spring.security.oauth2.client.registration.keycloak-oidc.scope=${KEYCLOAK_SCOPES:openid,profile,email}
#spring.security.oauth2.client.registration.keycloak-oidc.scope=${KEYCLOAK_SCOPES:openid,profile,email,bugtracker.admin,bugtracker.user}
#spring.security.oauth2.client.registration.keycloak-oidc.scope=${KEYCLOAK_SCOPES:openid,profile,email,bugtracker}

# This represents the Keycloak Provider (issuer is enough for Spring Boot to know all endpoints)
# OpenId configuration - ${issuer-uri}/.well-known/openid-configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:19090/realms/oauthrealm}